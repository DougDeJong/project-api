{"version":3,"sources":["components/Auth/auth-service.js","components/Navbar/Navbar.js","components/PostList/PostList.js","components/PostMaker/PostMaker.js","components/Login/Login.js","components/Signup/Signup.js","App.js","components/NewPost/NewPost.js","serviceWorker.js","index.js","components/Navbar/images/T1D3icon.svg"],"names":["AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","process","withCredentials","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","setTheUserInTheAppComponent","state","loggedInUser","nextProps","setState","_this2","react_default","a","createElement","className","src","Logo","alt","Link","to","style","textDecoration","onClick","Component","PostList","getAllPosts","responseFromApi","listOfPosts","width","float","map","index","key","_id","concat","title","maxWidth","content","PostMaker","handleChange","event","_event$target","target","name","value","defineProperty","handlePostSubmit","console","log","preventDefault","blerb","user","contentState","convertFromRaw","editorState","stateToHTML","Redirect","catch","error","EditorState","createEmpty","onChange","handleKeyCommand","bind","assertThisInitialized","userInSession","command","newState","RichUtils","id","type","e","aria-label","aria-describedby","react_draft_wysiwyg","React","withRouter","Login","handleFormSubmit","onSubmit","Signup","theUserObject","App","logMeIn","userObj","onEditorStateChange","err","_this3","fetchUser","components_Navbar_Navbar","Switch","Route","exact","path","render","components_Login_Login","assign","components_Signup_Signup","component","components_PostMaker_PostMaker","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b18bc190.chunk.js","sourcesContent":["// auth/auth-service.js\n\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n\n\n\nsignup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../Auth/auth-service';\nimport './Navbar.css'\nimport Logo from './images/T1D3icon.svg'\n\n\nclass Navbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    this.setState({ loggedInUser: nextProps[\"userInSession\"]})\n  }\n\n\n  logout = () =>{\n    this.service.logout()\n    .then(()=>{\n      this.props.setTheUserInTheAppComponent(null)\n    })\n  }\n    \n  render(){\n    if(this.state.loggedInUser){\n      return(\n        <nav className=\"navbar navbar-dark bg-dark\">\n        <img className=\"navbar-brand tideLogo\" src={Logo} alt=\"logo\"/>\n          <ul className= \"navbar-nav navlist\">\n            <li className=\"nav-item active greeter\">Welcome, {this.state.loggedInUser.username}</li>\n            </ul>\n            <ul className=\"navbar-nav navlist ml-auto\">\n            <li className=\"nav-item active\">\n            <Link className=\"nav-item active mr-sm-2\" to=\"/posts\" style={{ textDecoration: 'none' }}><button className =\"btn btn-info buttonRound\">Posts</button></Link>\n            </li>\n            <li className=\"nav-item active\">\n            <Link className=\"nav-item active mr-sm-2\" to=\"/newpost\" style={{ textDecoration: 'none' }}><button className =\"btn btn-info buttonRound\">New Post</button></Link>\n            </li>\n            <li className=\"nav-item active\">\n              <button className=\"btn btn-info buttonRound\" onClick={()=>this.logout()}>Log Out</button>\n            </li>\n          </ul>\n        </nav>\n      )\n    } else {\n      return (\n        <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n        <ul className= \"navbar-nav\">\n            <li className=\"nav-item active\"><Link className=\"nav-link\" to='/signup' style={{ textDecoration: 'none' }}>Signup</Link></li>\n          </ul>\n        </nav>\n        </div>\n      )\n    }\n    }\n  }\n  export default Navbar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// import AddProject from './AddProject';\n\nclass PostList extends Component {\n  constructor(props){\n      super(props);\n      this.state = { listOfPosts: [] };\n  }\n\n  getAllPosts = () =>{\n    axios.get(`http://localhost:5000/api/posts`)\n    .then(responseFromApi => {\n      this.setState({\n        listOfPosts: responseFromApi.data\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.getAllPosts();\n  }\n\n  render(){\n    return(\n      <div>\n        <div style={{width: '60%', float:\"left\"}}>\n          { this.state.listOfPosts.map((post, index) => {\n            return (\n              <div key={post._id}>\n                <Link to={`/posts/${post._id}`}>\n                  <h3>{post.title}</h3>\n                </Link>\n                <p style={{maxWidth: '400px'}} >{post.content} </p>\n              </div>\n            )})\n          }\n        </div>\n        <div style={{width: '40%', float:\"right\"}}>\n            {/* <AddProject getData={() => this.getAllProjects()}/> */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Draft.css'\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils, getCurrentContent } from 'draft-js';\nimport { Editor} from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Redirect, Link, Route, withRouter } from 'react-router-dom'\nimport {stateToHTML} from 'draft-js-export-html';\nimport axios from 'axios'\n\n\nclass PostMaker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null, title: \"\", blerb: \"\", editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => {\n      \n      this.setState({editorState})\n\n    };\n      this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ loggedInUser: this.props.userInSession})\n  }\n\n  handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  }\n\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n\n    this.setState({[name]: value});\n}\n\n  handlePostSubmit = (event) => {\n    console.log('clicked!')\n    event.preventDefault();\n    const title = this.state.title;\n    const blerb = this.state.blerb;\n    const user = this.state.loggedInUser;\n    const contentState = convertFromRaw(this.state.editorState);\n    console.log(contentState)\n    const content = stateToHTML(contentState);\n    axios.post(process.env.REACT_APP_API_URL+\"/posts\", {title, blerb, content, contentState, user} )\n    .then( () => {\n      return (\n        <Redirect to='/PostList' />\n      ) \n  })\n  .catch( error => console.log(error) )\n}\n\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid\">\n        <div className=\"row editor-row\">\n        <div className=\"col-4 text-writer\">\n        <div className=\"input-group input-group-lg\">\n  <div className=\"input-group-prepend colAligner\">\n    <span className=\"input-group-text inputTag\" id=\"inputGroup-sizing-lg\">Title</span>\n  </div>\n  <input type=\"text\" name=\"title\" className=\"form-control colAligner\" value={this.state.title} onChange={ e => this.handleChange(e)} aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\"/>\n  <div className=\"input-group colAligner\">\n  <div className=\"input-group-prepend\">\n    <span className=\"input-group-text inputTag\">Blerb</span>\n  </div>\n  <textarea className=\"form-control\" name=\"blerb\" value={this.state.blerb} onChange={ e => this.handleChange(e)} aria-label=\"With textarea\"></textarea>\n</div>\n        </div>\n<Link to={'/'} onClick={this.handlePostSubmit}><button type=\"button\" className=\"btn btn-dark darkButton\">Submit Post!</button></Link>\n        </div>\n        <div className=\"col-6 text-writer\">\n        <Editor\n          handleKeyCommand={this.handleKeyCommand}\n          onChange={this.onChange}\n          />\n          </div>\n        \n        </div>\n      </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(PostMaker)","// auth/Signup.js\n\nimport React, { Component } from 'react';\nimport AuthService from '../Auth/auth-service';\nimport {Link} from 'react-router-dom' \n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n  \n    this.service.login(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        this.props.setTheUserInTheAppComponent(response)\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n  \n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Login\" />\n        </form>\n  \n        <p>Don't have an account? \n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n  \n      </div>\n    )\n  }\n}\nexport default Login;","\n// auth/Signup.js\n\nimport React, { Component } from 'react';\nimport AuthService from '../Auth/auth-service';\nimport {Link} from 'react-router-dom' \n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n  \n    this.service.signup(username, password)\n    .then( theUserObject => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        this.props.setTheUserInTheAppComponent(theUserObject)\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n  \n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n  \n        <p>Already have account? \n            <Link to={\"/\"}> Login</Link>\n        </p>\n  \n      </div>\n    )\n  }\n\n\n}\n\nexport default Signup;","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport PostList from \"./components/PostList/PostList\";\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\nimport { Editor} from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport \"./App.css\";\nimport AuthService from \"./components/Auth/auth-service\";\nimport PostMaker from \"./components/PostMaker/PostMaker\";\nimport Login from \"./components/Login/Login\";\nimport Signup from \"./components/Signup/Signup\";\nimport NewPost from \"./components/NewPost/NewPost\";\n\nclass App extends Component {\n  constructor(props){\n  super(props)\n  this.state = { \n    loggedInUser: null,\n    editorState: EditorState.createEmpty(),\n   };\n  this.service = new AuthService();\n  }\n\n  logMeIn= (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n  }\n\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    })\n  };\n\n  render() {\n    this.fetchUser();\n\n    return (\n      <div className=\"App\">\n\n        <Navbar setTheUserInTheAppComponent={this.logMeIn} userInSession={this.state.loggedInUser} />\n       \n\n        <Switch>\n        <Route exact path=\"/\" render={() => <Login  {...this.props} setTheUserInTheAppComponent={this.logMeIn}/>}/>\n        <Route exact path='/signup' render={() => <Signup  {...this.props} setTheUserInTheAppComponent={this.logMeIn}/>}/>\n          <Route exact path=\"/posts\" component={PostList} />\n          <Route exact path=\"/newpost\" render={() => <PostMaker {...this.props} userInSession={this.state.loggedInUser}/>} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\nimport React, { Component } from \"react\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport PostMaker from '../PostMaker/PostMaker';\n\n\nclass NewPost extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      editorState: EditorState.createEmpty(),\n\n    }\n  }\n  \n    onEditorStateChange = (editorState) => {\n      this.setState({\n        editorState,\n      })\n    };\n\n    render() {\n      return(\n        <div class=\"container-fluid\">\n        <div class=\"row editor-row\">\n        <div class=\"col-8 text-writer\">\n    <PostMaker onEditorStateChange={this.onEditorStateChange} />\n        \n        </div></div></div>\n      )\n    }\n}\nexport default NewPost;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n<Router>\n  <App />\n  </Router>,\n   document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/T1D3icon.4ecf6dd3.svg\";"],"sourceRoot":""}