{"version":3,"sources":["components/Navbar/images/T1D3icon.svg","components/Auth/auth-service.js","components/Navbar/Navbar.js","components/PostList/PostList.js","components/PostMaker/PostMaker.js","components/Login/Login.js","components/Signup/Signup.js","components/Userview/Userview.js","components/NewPost/NewPost.js","components/EditPost/EditPost.js","components/Post/Post.js","components/EditComment/EditComment.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","process","withCredentials","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","setTheUserInTheAppComponent","state","loggedInUser","nextProps","setState","_this2","react_default","a","createElement","className","src","Logo","alt","Link","to","style","textDecoration","onClick","Component","PostList","getAllPosts","responseFromApi","listOfPosts","map","index","key","_id","concat","color","float","title","author","blerb","width","PostMaker","handleChange","event","_event$target","target","name","value","defineProperty","handlePostSubmit","console","log","preventDefault","transContentState","convertFromRaw","editorState","content","stateToHTML","history","push","catch","error","EditorState","createEmpty","onChange","handleKeyCommand","bind","assertThisInitialized","userInSession","command","newState","RichUtils","id","type","e","aria-label","aria-describedby","react_draft_wysiwyg","React","withRouter","Login","handleFormSubmit","onSubmit","Signup","theUserObject","Userview","result","filter","thePosts","getAllComments","userComments","commentResult","theComments","listOfComments","deleteProject","theId","delete","err","deleteComment","theCommentId","comment","EditPost","handleEditSubmit","params","match","contentState","convertToRaw","getCurrentContent","put","onEditorStatechange","blocksFromHTML","convertFromHTML","theState","ContentState","createFromBlockArray","contentBlocks","entityMap","createWithContent","_this3","onEditorStateChange","Post","handleCommentSubmit","newComment","thePost","showDiv","comments","ReactHtmlParser","maxWidth","toggleHidden","EditComment","commentContent","App","logMeIn","userObj","fetchUser","components_Navbar_Navbar","Switch","Route","exact","path","render","components_Login_Login","assign","components_Signup_Signup","components_Userview_Userview","components_EditPost_EditPost","component","components_PostMaker_PostMaker","components_Post_Post","components_EditComment_EditComment","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da7664d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/T1D3icon.4ecf6dd3.svg\";","// auth/auth-service.js\n\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_BASE_URL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n\n\n\nsignup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../Auth/auth-service';\nimport './Navbar.css'\nimport Logo from './images/T1D3icon.svg'\n\n\nclass Navbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    this.setState({ loggedInUser: nextProps[\"userInSession\"]})\n  }\n\n\n  logout = () =>{\n    this.service.logout()\n    .then(()=>{\n      this.props.setTheUserInTheAppComponent(null)\n    })\n  }\n    \n  render(){\n    if(this.state.loggedInUser){\n      return(\n        <nav className=\"navbar navbar-dark bg-dark\">\n        <img className=\"navbar-brand tideLogo\" src={Logo} alt=\"logo\"/>\n          <ul className= \"navbar-nav navlist\">\n            <li className=\"nav-item active greeter\">\n            <Link to=\"/userview\">Welcome, {this.state.loggedInUser.username}</Link> </li>\n            </ul>\n            <ul className=\"navbar-nav navlist ml-auto\">\n            <li className=\"nav-item active\">\n            <Link className=\"nav-item active mr-sm-2\" to=\"/posts\" style={{ textDecoration: 'none' }}><button className =\"btn btn-info buttonRound\">Posts</button></Link>\n            </li>\n            <li className=\"nav-item active\">\n            <Link className=\"nav-item active mr-sm-2\" to=\"/newpost\" style={{ textDecoration: 'none' }}><button className =\"btn btn-info buttonRound\">New Post</button></Link>\n            </li>\n            <li className=\"nav-item active\">\n              <button className=\"btn btn-info buttonRound\" onClick={()=>this.logout()}>Log Out</button>\n            </li>\n          </ul>\n        </nav>\n      )\n    } else {\n      return (\n        <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n        <ul className= \"navbar-nav\">\n            <li className=\"nav-item active\"><Link className=\"nav-link\" to='/signup' style={{ textDecoration: 'none' }}>Signup</Link></li>\n          </ul>\n        </nav>\n        </div>\n      )\n    }\n    }\n  }\n  export default Navbar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n// import AddProject from './AddProject';\n\nclass PostList extends Component {\n  constructor(props){\n      super(props);\n      this.state = { listOfPosts: [] };\n  }\n\n  getAllPosts = () =>{\n    axios.get(process.env.REACT_APP_BASE_URL+'/posts')\n    .then(responseFromApi => {\n      this.setState({\n        listOfPosts: responseFromApi.data\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.getAllPosts();\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"postList\" >\n          { this.state.listOfPosts.map((post, index) => {\n            return (\n              <div className='postCard col-6' key={post._id}>\n              <div className=\"row\">\n              <div className='postInfo col-4'>\n                <Link to={`/posts/${post._id}` } style={{ textDecoration: 'none', color: 'white', float: \"left\"}}>\n                  <h3 className=\"postTitle\">{post.title}</h3>\n                </Link>\n                <h5 className=\"postUser\"> by {post.author.username} </h5>\n               </div>\n                <p className=\"postBlerb col-4\" >{post.blerb} </p>\n              </div>\n              </div>\n            )})\n          }\n        </div>\n        <div style={{width: '40%', float:\"right\"}}>\n            {/* <AddProject getData={() => this.getAllProjects()}/> */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostList;","import React from 'react';\nimport './Draft.css'\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from 'draft-js';\nimport { Editor} from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { withRouter } from 'react-router-dom'\nimport {stateToHTML} from 'draft-js-export-html';\nimport axios from 'axios'\n\n\nclass PostMaker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null, title: \"\", blerb: \"\", editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => {\n      \n      this.setState({editorState})\n\n    };\n      this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ loggedInUser: this.props.userInSession})\n  }\n  componentWillReceiveProps(nextProps){\n    this.setState({ loggedInUser: nextProps.userInSession})\n\n  }\n\n  handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  }\n\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n\n    this.setState({[name]: value});\n}\n\n  handlePostSubmit = (event) => {\n    console.log('clicked!')\n    event.preventDefault();\n    const title = this.state.title;\n    const blerb = this.state.blerb;\n    const transContentState = convertFromRaw(this.state.editorState);\n    const content = stateToHTML(transContentState);\n    axios.post(process.env.REACT_APP_BASE_URL+\"/posts\", {title, blerb, content }, {withCredentials: true})\n    .then( () => {\n      return (\n        this.props.history.push('/posts')\n      ) \n  })\n  .catch( error => console.log(error) )\n}\n\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid\">\n        <div className=\"row editor-row\">\n        <div className=\"col-4 text-writer\">\n        <div className=\"input-group input-group-lg\">\n  <div className=\"input-group-prepend colAligner\">\n    <span className=\"input-group-text inputTag\" id=\"inputGroup-sizing-lg\">Title</span>\n  </div>\n  <input type=\"text\" name=\"title\" className=\"form-control colAligner\" value={this.state.title} onChange={ e => this.handleChange(e)} aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\"/>\n  <div className=\"input-group colAligner\">\n  <div className=\"input-group-prepend\">\n    <span className=\"input-group-text inputTag\">Blerb</span>\n  </div>\n  <textarea className=\"form-control\" name=\"blerb\" value={this.state.blerb} onChange={ e => this.handleChange(e)} aria-label=\"With textarea\"></textarea>\n</div>\n        </div>\n<button type=\"button\" className=\"btn btn-dark darkButton\" onClick={this.handlePostSubmit}>Submit Post!</button>\n        </div>\n        <div className=\"col-6 text-writer\">\n        <Editor\n          handleKeyCommand={this.handleKeyCommand}\n          onChange={this.onChange}\n          />\n          </div>\n        \n        </div>\n      </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(PostMaker)","// auth/Signup.js\n\nimport React, { Component } from 'react';\nimport AuthService from '../Auth/auth-service';\nimport {Link} from 'react-router-dom' \n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n  \n    this.service.login(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        this.props.setTheUserInTheAppComponent(response)\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n  \n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Login\" />\n        </form>\n  \n        <p>Don't have an account? \n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n  \n      </div>\n    )\n  }\n}\nexport default Login;","\n// auth/Signup.js\n\nimport React, { Component } from 'react';\nimport AuthService from '../Auth/auth-service';\nimport {Link} from 'react-router-dom' \n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n  \n    this.service.signup(username, password)\n    .then( theUserObject => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        this.props.setTheUserInTheAppComponent(theUserObject)\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n  \n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n  \n        <p>Already have account? \n            <Link to={\"/\"}> Login</Link>\n        </p>\n  \n      </div>\n    )\n  }\n\n\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// import AddProject from './AddProject';\n\nclass Userview extends Component {\n  constructor(props){\n      super(props);\n      this.state = { listOfPosts: [] , loggedInUser: null, listOfComments: [] };\n  }\n\n  getAllPosts = () =>{\n    axios.get(process.env.REACT_APP_BASE_URL+'/posts', {withCredentials: true})\n    .then(responseFromApi => {\n      const userPosts = responseFromApi.data;\n     const result = userPosts.filter(thePosts => (thePosts.author._id === this.state.loggedInUser._id));\n      this.setState({\n        listOfPosts: result\n      })\n    })\n  }\n\n  getAllComments = () =>{\n    axios.get(process.env.REACT_APP_BASE_URL+'/comments', {withCredentials: true})\n    .then(responseFromApi => {\n      const userComments = responseFromApi.data;\n      console.log(\"COMMENT COMMENTS COMMENTS\")\n      console.log(userComments)\n      const commentResult = userComments.filter(theComments => (theComments.author._id === this.state.loggedInUser._id));\n      console.log(\"filtered filtered filtered\")\n      console.log(commentResult)\n      this.setState({\n        listOfComments: commentResult\n      })\n    })\n  }\n\n  componentWillMount() {\n    this.setState({ loggedInUser: this.props.userInSession})\n  }\n\n  componentWillReceiveProps(nextProps){\n    this.setState({ loggedInUser: nextProps.userInSession})\n\n  }\n\n  deleteProject = (theId) => {\n    axios.delete(process.env.REACT_APP_BASE_URL + `/posts/${theId}`)\n    .then( responseFromApi =>{\n        this.getAllPosts();        \n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n  }\n\n  deleteComment = (theCommentId) => {\n    console.log('clicked')\n    axios.delete(process.env.REACT_APP_BASE_URL + `/comments/${theCommentId}`)\n    .then( responseFromApi =>{\n      this.getAllComments();\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n\n\n\n  componentDidMount() {\n    this.getAllPosts();\n    this.getAllComments();\n    console.log('______)))))______');\n    console.log(this.state.listOfPosts);\n  }\n\n  render(){\n    return(\n      <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"postCard col-4\" >\n        <h4>Your Posts</h4>\n          { this.state.listOfPosts.map((post, index) => {\n            return (\n              <div key={post._id}>\n                <Link to={`/posts/${post._id}`}>\n                  <h3>{post.title}</h3>\n                </Link>\n                <button onClick={() => this.deleteProject(post._id)}>Delete Post</button>\n                <Link to={`/editpost/${post._id}`}><button className =\"btn btn-info buttonRound\">Edit This Post</button></Link>\n\n              </div>\n            )})\n          }\n        </div>\n        <div className=\"postCard col-4\">\n        <h4>Your comments</h4>\n          { this.state.listOfComments.map((comment, index) => {\n            return (\n              <div key={comment._id}>\n                  <p>{comment.content}</p>\n                <button onClick={() => this.deleteComment(comment._id)}>Delete Comment</button>\n                <Link to={`/editcomment/${comment._id}`}><button className =\"btn btn-info buttonRound\">Edit This Comment</button></Link>\n\n              </div>\n            )})\n          }\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default Userview;","import { EditorState } from 'draft-js';\nimport React, { Component } from \"react\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport PostMaker from '../PostMaker/PostMaker';\n\n\nclass NewPost extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      editorState: EditorState.createEmpty(),\n\n    }\n  }\n  \n    onEditorStateChange = (editorState) => {\n      this.setState({\n        editorState,\n      })\n    };\n\n    render() {\n      return(\n        <div class=\"container-fluid\">\n        <div class=\"row editor-row\">\n        <div class=\"col-8 text-writer\">\n    <PostMaker onEditorStateChange={this.onEditorStateChange} />\n        \n        </div></div></div>\n      )\n    }\n}\nexport default NewPost;","import React from \"react\";\nimport \"./Draft.css\";\nimport {\n  EditorState,\n  convertFromHTML,\n  convertToRaw,\n  RichUtils,\n  ContentState\n} from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport axios from \"axios\";\n\nclass EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null, title: \"\", blerb: \"\", editorState: EditorState.createEmpty() };\n    this.onChange = editorState => {\n      this.setState({ editorState });\n    };\n    this.onEditorStatechange = editorState => {\n      this.setState({ editorState });\n    };\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ loggedInUser: this.props.userInSession });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ loggedInUser: nextProps.userInSession });\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    console.log(params);\n    axios\n      .get(process.env.REACT_APP_BASE_URL + `/posts/${params.id}`)\n      .then(response => {\n        const blocksFromHTML = convertFromHTML(response.data.content);\n        console.log(response.data.content);\n        console.log(blocksFromHTML);\n        const theState = ContentState.createFromBlockArray(\n          blocksFromHTML.contentBlocks,\n          blocksFromHTML.entityMap\n        );\n        console.log(theState);\n\n        this.setState({\n          editorState: EditorState.createWithContent(theState),\n          title: response.data.title,\n          blerb: response.data.blerb\n        });\n        console.log(this.state.editorState);\n      });\n  }\n\n  handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleEditSubmit = event => {\n    const { params } = this.props.match;\n    event.preventDefault();\n    const title = this.state.title;\n    const blerb = this.state.blerb;\n    // const transContentState = convertFromRaw(this.state.editorState);\n    const rawData = convertToRaw(this.state.editorState.getCurrentContent());\n    const contentState = rawData;\n    const content = stateToHTML(this.state.editorState.getCurrentContent());\n    axios.put(process.env.REACT_APP_BASE_URL + `/posts/${params.id}`, { title, blerb, content, contentState }, {withCredentials: true})\n    .then(() => {\n      return this.props.history.push(\"/userview\");\n    })\n    .catch(error => console.log(error));\n    \n    }\n  \n\n  // handlePostSubmit = event => {\n  //   console.log(\"clicked!\");\n  //   event.preventDefault();\n  //   const title = this.state.title;\n  //   const blerb = this.state.blerb;\n  //   const contentState = convertFromRaw(this.state.editorState);\n  //   console.log(contentState);\n  //   const content = stateToHTML(contentState);\n  //   axios\n  //     .post(\n  //       process.env.REACT_APP_BASE_URL + \"/posts\",\n  //       { title, blerb, content, contentState },\n  //       { withCredentials: true }\n  //     )\n  //     .then(() => {\n  //       return this.props.history.push(\"/posts\");\n  //     })\n  //     .catch(error => console.log(error));\n  // };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid\">\n          <div className=\"row editor-row\">\n            <div className=\"col-4 text-writer\">\n            <h1>Edit Your Post</h1>\n              <div className=\"input-group input-group-lg\">\n                <div className=\"input-group-prepend colAligner\">\n                  <span\n                    className=\"input-group-text inputTag\"\n                    id=\"inputGroup-sizing-lg\"\n                  >\n                    Title\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  className=\"form-control colAligner\"\n                  value={this.state.title}\n                  onChange={e => this.handleChange(e)}\n                  aria-label=\"Large\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                />\n                <div className=\"input-group colAligner\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text inputTag\">Blerb</span>\n                  </div>\n                  <textarea\n                    className=\"form-control\"\n                    name=\"blerb\"\n                    value={this.state.blerb}\n                    onChange={e => this.handleChange(e)}\n                    aria-label=\"With textarea\"\n                  />\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-dark darkButton\"\n                onClick={this.handleEditSubmit}\n              >\n                Confirm Edit\n              </button>\n            </div>\n            <div className=\"col-6 text-writer\">\n              <Editor\n                editorState={this.state.editorState}\n                handleKeyCommand={this.handleKeyCommand}\n                onEditorStateChange={this.onChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(EditPost);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2\n} from \"react-html-parser\";\nimport \"./Post.css\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thePost: {},\n      theComments: [],\n      showDiv: false,\n      newComment: \"\",\n      loggedInUser: null\n    };\n    this.onChange = editorState => {\n      this.setState({ editorState });\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ loggedInUser: this.props.userInSession });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ loggedInUser: nextProps.userInSession });\n  }\n\n  componentDidMount() {\n    this.getAllComments();\n  }\n\n  getAllComments() {\n\n    const { params } = this.props.match;\n    axios\n      .get(process.env.REACT_APP_BASE_URL + `/posts/${params.id}`)\n      .then(responseFromApi => {\n        this.setState({\n          thePost: responseFromApi.data,\n          theComments: responseFromApi.data.comments\n        });\n      });\n  }\n\n  toggleHidden() {\n    this.setState({\n      showDiv: !this.state.showDiv\n    });\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleCommentSubmit = event => {\n    console.log(\"clicked!\");\n    event.preventDefault();\n    const content = this.state.newComment;\n    const post = this.state.thePost;\n    axios\n      .post(\n        process.env.REACT_APP_BASE_URL + \"/comments\",\n        { content, post },\n        { withCredentials: true }\n      )\n      .then(() => {\n        this.getAllComments();\n      })\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    const { showDiv } = this.state;\n    return (\n      <div>\n        <div className=\"postContainer\">\n          <h1>{this.state.thePost.title}</h1>\n\n          {ReactHtmlParser(this.state.thePost.content)}\n        </div>\n        <div>\n          {this.state.theComments.map((comment, index) => {\n            return (\n              <div className=\"commentBox\" key={comment._id}>\n                <h3>{comment.author.username}</h3>\n                <p style={{ maxWidth: \"400px\" }}>{comment.content} </p>\n              </div>\n            );\n          })}\n          <div>\n            <button className=\"btn btn-dark btn-success displayButton\" onClick={() => this.toggleHidden()}>\n              {showDiv ? \"Hide\" : \"Add Comment\"}\n            </button>\n            {showDiv && (\n              <div id=\"the div you want to show and hide\">\n                <div className=\"input-group colAligner\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text inputTag\">Comment:</span>\n                  </div>\n                  <textarea\n                    className=\"form-control\"\n                    name=\"newComment\"\n                    value={this.state.newComment}\n                    onChange={e => this.handleChange(e)}\n                    aria-label=\"With textarea\"\n                  />\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-dark darkButton\"\n                  onClick={e => this.handleCommentSubmit(e)}\n                >\n                  Submit Comment\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Post);\n","import React from \"react\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass EditComment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null, commentContent: \"\", };\n    this.onChange = editorState => {\n      this.setState({ editorState });\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ loggedInUser: this.props.userInSession });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ loggedInUser: nextProps.userInSession });\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    console.log(params);\n    axios\n      .get(process.env.REACT_APP_BASE_URL + `/comments/${params.id}`)\n      .then(response => {\n         this.setState({\n          commentContent: response.data.content,\n        });\n      });\n  }\n\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleEditSubmit = event => {\n    const { params } = this.props.match;\n    event.preventDefault();\n    const content = this.state.commentContent;\n    // const transContentState = convertFromRaw(this.state.editorState);\n    axios.put(process.env.REACT_APP_BASE_URL + `/comments/${params.id}`, { content }, {withCredentials: true})\n    .then(() => {\n      return this.props.history.push(\"/userview\");\n    })\n    .catch(error => console.log(error));\n    \n    }\n  \n\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid\">\n          <div className=\"row editor-row\">\n            <div className=\"col-4 text-writer\">\n            <h1>Edit Your Comment</h1>\n              <div className=\"input-group input-group-lg\">\n             \n                <div className=\"input-group colAligner\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text inputTag\">Your Comment</span>\n                  </div>\n                  <textarea\n                    className=\"form-control\"\n                    name=\"commentContent\"\n                    value={this.state.commentContent}\n                    onChange={e => this.handleChange(e)}\n                    aria-label=\"With textarea\"\n                  />\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-dark darkButton\"\n                onClick={this.handleEditSubmit}\n              >\n                Confirm Edit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(EditComment);\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport PostList from \"./components/PostList/PostList\";\nimport { EditorState, convertFromRaw, convertToRaw, RichUtils } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport AuthService from \"./components/Auth/auth-service\";\nimport PostMaker from \"./components/PostMaker/PostMaker\";\nimport Login from \"./components/Login/Login\";\nimport Signup from \"./components/Signup/Signup\";\nimport NewPost from \"./components/NewPost/NewPost\";\nimport Userview from \"./components/Userview/Userview\";\nimport EditPost from \"./components/EditPost/EditPost\";\nimport Post from \"./components/Post/Post\";\nimport EditComment from \"./components/EditComment/EditComment\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      editorState: EditorState.createEmpty()\n    };\n    this.service = new AuthService();\n  }\n\n  logMeIn = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          });\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            loggedInUser: false\n          });\n        });\n    }\n  }\n\n  onEditorStateChange = editorState => {\n    this.setState({\n      editorState\n    });\n  };\n\n  render() {\n    this.fetchUser();\n\n    return (\n      <div className=\"App\">\n        <Navbar\n          setTheUserInTheAppComponent={this.logMeIn}\n          userInSession={this.state.loggedInUser}\n        />\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Login\n                {...this.props}\n                setTheUserInTheAppComponent={this.logMeIn}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={() => (\n              <Signup\n                {...this.props}\n                setTheUserInTheAppComponent={this.logMeIn}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/userview\"\n            render={() => (\n              <Userview\n                {...this.props}\n                userInSession={this.state.loggedInUser}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/editpost/:id\"\n            render={() => (\n              <EditPost\n                {...this.props}\n                userInSession={this.state.loggedInUser}\n              />\n            )}\n          />\n          <Route exact path=\"/posts\" component={PostList} />\n          <Route\n            exact\n            path=\"/newpost\"\n            render={() => (\n              <PostMaker\n                {...this.props}\n                userInSession={this.state.loggedInUser}\n              />\n            )}\n          />\n          <Route exact path=\"/posts/:id\" render={() => (\n            <Post {...this.props}\n            userInSession={this.state.loggedInUser}\n            />\n          )}\n          />\n          <Route exact path=\"/editcomment/:id\" render={() => (\n            <EditComment {...this.props} userInSession={this.state.loggedInUser}\n            />\n          )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n<Router>\n  <App />\n  </Router>,\n   document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}